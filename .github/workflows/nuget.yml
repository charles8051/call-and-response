name: "Deploy to NuGet"

on: 
    push:
        tags:
        - 'v*'

env:
  SOLUTION_PATH: 'CallAndResponse.sln'
  PACKAGE_OUTPUT_DIRECTORY: 'Output'
  NUGET_SOURCE_URL: 'https://api.nuget.org/v3/index.json'
  GITHUB_SOURCE_URL: 'https://nuget.pkg.github.com/clee781/index.json'

jobs:
  deploy:
    name: 'Deploy'
    runs-on: 'windows-latest'
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v2

    - name: 'Install dotnet'
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'

    - name: 'Restore packages'
      run: dotnet restore ${{ env.SOLUTION_PATH }}

    - name: 'Build project'
      run: dotnet build ${{ env.SOLUTION_PATH }} --no-restore --configuration Release

    - id: get_version
      uses: battila7/get-version-action@v2

    - name: 'Get Version'
      run: echo ${{ steps.get_version.outputs.version-without-v }}

    - name: 'Pack CallAndResponse'
      run: dotnet pack Source/CallAndResponse/CallAndResponse.csproj --no-restore --no-build --configuration Release --include-symbols -p:PackageVersion=${{ steps.get_version.outputs.version-without-v }} --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }} -p:SymbolPackageFormat=snupkg
      
    - name: 'Pack CallAndResponse'
      run: dotnet pack Source/CallAndResponse.Protocol.Modbus/CallAndResponse.Protocol.Modbus.csproj --no-restore --no-build --configuration Release --include-symbols -p:PackageVersion=${{ steps.get_version.outputs.version-without-v }} --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }} -p:SymbolPackageFormat=snupkg
    
    - name: 'Pack CallAndResponse'
      run: dotnet pack Source/CallAndResponse.Transport.Ble/CallAndResponse.Transport.Ble.csproj --no-restore --no-build --configuration Release --include-symbols -p:PackageVersion=${{ steps.get_version.outputs.version-without-v }} --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }} -p:SymbolPackageFormat=snupkg
      
    - name: 'Pack CallAndResponse'
      run: dotnet pack Source/CallAndResponse.Transport.Serial/CallAndResponse.Transport.Serial.csproj --no-restore --no-build --configuration Release --include-symbols -p:PackageVersion=${{ steps.get_version.outputs.version-without-v }} --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }} -p:SymbolPackageFormat=snupkg

    - name: 'Push packages to GitHub'
      run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}\*.nupkg -k ${{ secrets.CALL_AND_RESPONSE_SECRET }} -s ${{ env.GITHUB_SOURCE_URL }}

    - name: 'Push packages to NuGet Gallery'
      run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}\*.nupkg -k ${{ secrets.NUGET_KEY }} -s ${{ env.NUGET_SOURCE_URL }}
